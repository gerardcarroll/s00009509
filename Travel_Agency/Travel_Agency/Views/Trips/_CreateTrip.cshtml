@model Travel_Agency.Models.Trip

<div class="modal fade" id="tripModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Create New Trip</h4>
            </div>            
            <div class="modal-body">            
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)                
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name)
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = "Trip Name" })
                        @Html.ValidationMessageFor(model => model.Name, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.StartDate)
                        @Html.TextBoxFor(model => model.StartDate, new { @class = "startDate form-control ", placeholder = "mm/dd/yyyy", id = "pickStart" })
                        @Html.ValidationMessageFor(model => model.StartDate, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FinishDate)
                        @Html.TextBoxFor(model => model.FinishDate, new { @class = "finishDate form-control ", placeholder = "mm/dd/yyyy", id = "pickFinish" })
                        @Html.ValidationMessageFor(model => model.FinishDate, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MinGuests)
                        @Html.TextBoxFor(model => model.MinGuests, new { @class = "form-control", placeholder = "Minimum Guests" })
                        @Html.ValidationMessageFor(model => model.MinGuests, null, new { @class = "text-danger" })
                    </div>                
            </div>
            <div id="error" class="col-sm-offset-1" style="visibility:hidden; color:red;">
                <h4>Error Creating New Trip</h4>
            </div>
            <div class="modal-footer">
                <form class="form-inline" role="form">
                    <div class="form-group">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                    </div>
                    <div class="form-group">
                        <button id="createT" class="btn btn-primary ">
                            <i class="glyphicon glyphicon-plus-sign"></i> Create
                        </button>
                    </div>
                </form>
            </div>            
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->


    <script>
        $(function () {
            $("#error").css('visibility', 'hidden');
            $('#pickStart').datepicker({ dateFormat: 'mm/dd/yy' });
            $('#pickFinish').datepicker({ dateFormat: 'mm/dd/yy' });


            $("#createT").click(function (e) {
                e.preventDefault();
                    var newTrip = {
                        Name: $("#Name").val(),
                        StartDate: $("#pickStart").val(),
                        FinishDate: $("#pickFinish").val(),
                        MinGuests: $("#MinGuests").val()
                    };
                    sendTrip(newTrip);
                });

                function sendTrip(t) {

                    $.ajax({
                        url: "http://localhost:49775/api/TripApi/Post",
                        data: JSON.stringify(t),
                        type: "POST",
                        contentType: "application/json;charset=utf-8",
                        success: function (result) {
                            window.location.replace('/Home/Index');                            
                        },

                        error: function (result) {
                            $("#error").css('visibility', 'visible');
                            //toastr.info(' *** ' + error);
                        }
                    });

                }
           

        });
    </script>

