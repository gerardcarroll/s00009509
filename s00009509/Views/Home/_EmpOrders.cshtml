@model PagedList.IPagedList<s00009509.Order>
@using PagedList
@using PagedList.Mvc;


<table class="table table-bordered table-responsive table-striped table-hover">
    <tr>
        <th>Order ID
        </th>
        <th>Customer ID
        </th>
        <th>Shipping Details
        </th>
        <th>Contact Name
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        
        <tr id="@item.EmployeeID" onclick="getEmpDetails(@item.EmployeeID)" style="cursor:pointer">
            <td>
                @Html.DisplayFor(modelItem => item.OrderID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CustomerID)
            </td>
            <td id="tcell" class="cell" title="@String.Format("Order Date: {0}, Required Date {1},  Shipped Date: {2}," +
                                                              " Via: {3}, Name: {4}, Address: {5}, City: {6}, Region: {7}," +
                                                              " Country: {8}, Postal Code: {9}",
                                                              item.OrderDate, item.RequiredDate, item.ShippedDate,
                                                              item.Shipper.CompanyName, item.ShipName, item.ShipAddress,
                                                              item.ShipCity, item.ShipRegion, item.ShipCountry, item.ShipPostalCode)">
                @{Html.RenderPartial("_ShippDetails", item);}
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Customer.ContactName)
            </td>
            <td class="form-inline" role="form">
                @Html.ActionLink("Edit", "Edit", new { id = item.OrderID }, new { @class = "btn btn-primary btn-info btn-xs" }) |
                <button id="deleteOrder" onclick="deleteO(@item.OrderID)" class="btn btn-primary btn-warning btn-xs">Delete</button>
            </td>
        </tr>
    }

</table>


Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("EmpIndex", new { employeeId = @ViewBag.empID, page = page }),
        PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions { UpdateTargetId = "OrderList" }))
